/* 
Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.
You must implement a solution with a linear runtime complexity and use only constant extra space.

Example 1:
Input: nums = [2,2,1]
Output: 1

Example 2:
Input: nums = [4,1,2,1,2]
Output: 4

Example 3:
Input: nums = [1]
Output: 1

 * @param {number[]} nums
 * @return {number}
 */

var singleNumber = function (nums) {
    nums.sort();
    for (let i = 1; i < nums.length;) {
        console.log(i, "i")
        if (nums[i - 1] === nums[i]) {
            console.log(nums[i - 1], nums[i]);
            i = i + 2;
            continue;
        }
        if (nums[i - 1] !== nums[i]) {
            if (nums[i] === nums[i + 1]) {
                return nums[i - 1]
            } else {
                return nums[i]
            }

        }
    }
    return nums[nums.length - 1]
};
